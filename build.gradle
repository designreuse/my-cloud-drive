buildscript {
    ext {
        springBootVersion = '1.3.0.M5'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway' 

jar {
    baseName = 'my-cloud-drive'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    //compile("org.springframework.cloud:spring-cloud-starter-eureka")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    //compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    
    compile("commons-lang:commons-lang:2.6")
    compile "org.apache.hadoop:hadoop-client:2.7.1"
    runtime("org.postgresql:postgresql:9.4-1201-jdbc41")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile ("junit:junit:4.11")

    compile("org.mockito:mockito-all:2.0.2-beta")
    compile("com.jayway.restassured:rest-assured:2.6.0")
    compile("org.assertj:assertj-core:3.2.0")

}

configurations {
    compile.exclude group:'ch.qos.logback'
}


dependencyManagement {
	imports { 
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.BUILD-SNAPSHOT" 
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/mydrive'
    user = 'mydrive'
    password = 'mydrive'
    //schemas = ['schema1', 'schema2', 'schema3']   
}
